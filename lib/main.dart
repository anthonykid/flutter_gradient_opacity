import 'package:flutter/material.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      home: Scaffold(
        backgroundColor: Colors.grey,
        appBar: AppBar(
          title: Text("Gradient Opacity"),
          backgroundColor: Colors.grey[800],
        ),
        body: Center(
          child: ShaderMask( //Creates a widget that applies a mask generated by a [Shader] to its child.
            shaderCallback: (rectangle) { //The shader callback is called with the current size of the child so that it can customize the shader to the size and location of the child.
              return LinearGradient( //Creates a linear gradient.
                      colors: [Colors.white, Colors.transparent],
                      begin: Alignment.topCenter,
                      end: Alignment.bottomCenter)
                  .createShader(
                      //Creates a [Shader] for this gradient to fill the given rect.
                      Rect.fromLTRB(0, 0, rectangle.width, rectangle.height));
            },
            blendMode: BlendMode
                .dstIn, //Show the destination image, but only where the two images overlap. The source image is not rendered, it is treated merely as a mask. The color channels of the source are ignored, only the opacity has an effect.
            child: Image(
              width: 300,
              image: NetworkImage(
                  "https://i.pinimg.com/564x/02/4f/8d/024f8da166391a9141e319740613c098.jpg"),//Creates an object that fetches the image at the given URL.
            ),
          ),
        ),
      ),
    );
  }
}
